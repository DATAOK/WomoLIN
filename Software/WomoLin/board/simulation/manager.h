#pragma once

#include "../../lib/include/managerbase.h"
#include "../../lib/include/unit.h"
#include "./hal/include/unit.h"

namespace womolin::board::simulation
{
   
   using namespace womolin::lib::manager;
   using namespace womolin::lib::interface::hal;
   using namespace womolin::unit;
   using namespace womolin::signal;
   using namespace womolin::board::simulation::hal;

   class Manager : public ManagerBase 
   {
      public:
         Manager( ISerial & serial );
         ~Manager() = default;

      private:
         // properties of the board, names identically to the lib with prefix HAL
         HalOutput HAL_RELAY1{ HalOutput( static_cast<ID>(0) ) }; 
         HalOutput HAL_RELAY2{ HalOutput( static_cast<ID>(1) ) }; 

         // will be generated by code generator
         // WomoLIN Units with allcation to the board units HAL_...
         Output          RELAY1{ Output( HAL_RELAY1 ) };
         Output          RELAY2{ Output( HAL_RELAY2 ) };

         // User Signals, e.g. licht_an_aus, with allocation to the WomoLIN signal types Signal...
         SignalSetReset     licht_an_aus{ SignalSetReset() };
   };

}
